package day07;

interface Power {
	void turnOn();
	void turnOff();
}

//class TV implements Power {
//
//	@Override
//	public void turnOn() {
//		System.out.println("전원 켜짐");
//	}
//
//	@Override
//	public void turnOff() {
//		System.out.println("전원 꺼짐");
//	}
//	
//}

public class Anonymous01 {

	public static void main(String[] args) {
		/* 익명 클래스(Anonymous Class) : 내부 클래스의 일종.
		 * - 인터페이스를 이용하여 객체를 생성할 때, 클래스를 인터페이스 구현하여 객체를 생성
		 * 익명 클래스를 사용하는 이유.
		 * - 인터페이스의 기능이 적고, 그 객체가 1개만 필요할 경우.
		 * 메서드로 매개변수의 값이 들어와야 할 때 익명클래스를 사용함.
		 * 
		 */
//		TV t = new TV(); 		// Power 를 구현한 클래스이기 때문에 UpCasting 가능
		Anonymous01 a = new Anonymous01();
//		a.product(t);
		
		a.product(new Power() {
			@Override
			public void turnOn() {
				System.out.println("익명클래스 / 전원 켜짐");
			}
			
			@Override
			public void turnOff() {
				System.out.println("익명클래스 / 전원 꺼짐");
			}
		}); // 익명클래스 : 객체 안에 아예 선언처리. 다만 사용할때마다 구현처리.
	}
	public void product(Power p) {
		p.turnOn();
		System.out.println("작동중");
		p.turnOff();
	}
}

class A { // 외부 클래스(outer class)
	// 내부 클래스(inner class). 잘 안씀.
	private class B {
		// 내부클래스를 사용하는 이유.
		// A 클래스에서만 필요한 클래스를 생성하기 위해.
	}
}